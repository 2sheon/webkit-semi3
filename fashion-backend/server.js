require('dotenv').config();
const express = require('express');
const mysql = require('mysql2');
const cors = require('cors');

const app = express();
app.use(express.json()); // JSON ìš”ì²­ ì²˜ë¦¬
app.use(cors()); // CORS ì„¤ì •

// MySQL ì—°ê²°
const db = mysql.createConnection({
    host: process.env.DB_HOST,
    user: process.env.DB_USER,
    password: process.env.DB_PASS,
    database: process.env.DB_NAME,
});

db.connect((err) => {
    if (err) {
        console.error('MySQL ì—°ê²° ì˜¤ë¥˜:', err);
        return;
    }
    console.log('âœ… MySQL ì—°ê²° ì™„ë£Œ');
});

// ðŸ“Œ [1] ëª¨ë“  ê²Œì‹œê¸€ ì¡°íšŒ (READ)
app.get('/api/posts', (req, res) => {
    const sql = 'SELECT * FROM posts';
    db.query(sql, (err, result) => {
        if (err) return res.status(500).json(err);
        res.json(result);
    });
});

// ðŸ“Œ [2] ìƒˆ ê²Œì‹œê¸€ ì¶”ê°€ (CREATE)
app.post('/api/posts', (req, res) => {
    const { name, desc, src, author, date } = req.body;
    const sql = 'INSERT INTO posts (name, `desc`, src, author, date) VALUES (?, ?, ?, ?, ?)';
    db.query(sql, [name, desc, src, author, date], (err, result) => {
        if (err) return res.status(500).json(err);
        res.json({ id: result.insertId, ...req.body });
    });
});

// ðŸ“Œ [3] íŠ¹ì • ê²Œì‹œê¸€ ìˆ˜ì • (UPDATE)
app.put('/api/posts/:id', (req, res) => {
    const { name, desc, src, date } = req.body;
    const sql = 'UPDATE posts SET name=?, `desc`=?, src=?, date=?, isEdited=true WHERE id=?';
    db.query(sql, [name, desc, src, date, req.params.id], (err, result) => {
        if (err) return res.status(500).json(err);
        res.json({ message: 'ê²Œì‹œê¸€ ìˆ˜ì • ì™„ë£Œ' });
    });
});

// ðŸ“Œ [4] íŠ¹ì • ê²Œì‹œê¸€ ì‚­ì œ (DELETE)
app.delete('/api/posts/:id', (req, res) => {
    const sql = 'DELETE FROM posts WHERE id=?';
    db.query(sql, [req.params.id], (err, result) => {
        if (err) return res.status(500).json(err);
        res.json({ message: 'ê²Œì‹œê¸€ ì‚­ì œ ì™„ë£Œ' });
    });
});

// ì„œë²„ ì‹¤í–‰
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`ðŸš€ ì„œë²„ ì‹¤í–‰ ì¤‘: http://localhost:${PORT}`));
